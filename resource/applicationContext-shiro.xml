<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation=" 
          http://www.springframework.org/schema/beans 
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
          http://www.springframework.org/schema/tx 
          http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
          http://www.springframework.org/schema/context 
          http://www.springframework.org/schema/context/spring-context-3.0.xsd 
          http://www.springframework.org/schema/aop 
          http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- 添加realm定义 -->
	<bean id="ryRealm" class="web.shiro.RyAuthorizingRealm">
		<!-- 可配置cache token<->认证信息的cache，用于REST等需要频繁认证的场景 -->
		<!--<property name="authorizationCachingEnabled" value="true"/>-->
		<property name="systemInfo" ref="systemInfo" />
	</bean>

	<bean id="ryAuthc" class="web.shiro.RyFormAuthenticationFilter" />

	<!-- Shiro Filter -->
	<bean id="shiroFilter"
		class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="login.do" />
		<property name="successUrl" value="index.jsp" />
		<property name="unauthorizedUrl" value="login.jsp" />
		<property name="filters">
			<map>
				<entry key="myAuthc" value-ref="ryAuthc" />
			</map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/login/login.do = anon
				/** = anon
			</value>
		</property>
	</bean>
	<!-- 添加securityManager定义 -->
	<bean id="securityManager"
		class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="ryRealm" />
	</bean>

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor"
		class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- AOP式方法级权限检查 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

</beans>