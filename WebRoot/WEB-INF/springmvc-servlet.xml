<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-autowire="byName">
	
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/images/**" location="/images/" />
	<!-- 
	<mvc:resources location="/WEB-INF/jsp/baobeisys/upload/userqm/" mapping="/pict/**" />
	 -->

	<!-- 自动搜索@Controller @Service等标注的类 -->
	<context:annotation-config />
	<context:component-scan base-package="web,baobeisys,moi,weixin" />
	<context:property-placeholder location="classpath:weixinpay.properties" ignore-unresolvable="true"/>
	<context:property-placeholder location="classpath:wxurl.properties" ignore-unresolvable="true"/>
	
	<bean id="springUtil" class="com.sgy.util.spring.SpringUtil" />

	<!-- 默认的注解映射的支持 ,它会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter
	<mvc:annotation-driven /> -->
	
	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /><!-- json转换器 -->
			</list>
		</property>
	</bean>
	
	<!-- 拦截器 -->
	<bean id="urlInterceptor" class="web.interceptor.URLInterceptor">
		<!-- 配置不需要拦截的URL，多个用","分割 -->
		<property name="mappingURL" value="login.do,editPwdFrame.do,editPwd.do,/baobeisys/password/,/mobile/,downLoad.do" />
	</bean>
	
	<bean id="securityInterceptor" class="web.interceptor.SecurityInterceptor">
		<!-- 配置不需要拦截的URL，多个用","分割 -->
		<property name="mappingURL" value="login.do,editPwdFrame.do,editPwd.do,index.do,/mobile/" />
		<property name="systemInfo" ref="systemInfo"></property>
	</bean>
	
	<bean id="logInterceptor" class="web.interceptor.LogInterceptor">
		<property name="systemInfo" ref="systemInfo" />
		<property name="systemLogService" ref="systemLogService" />
	</bean>
	
	<!-- 手机端拦截器 -->
	<bean id="mobileURLInterceptor" class="web.interceptor.MobileURLInterceptor">
		<property name="mappingURL" value="/mobile/applet/wxLogin/addOpenId.do,/mobile/applet/wxLogin/addOpenId2.do,/mobile/applet/wxLogin/addOpenId.do,/mobile/applet/wxLogin/getOpenid.do" />
	</bean>
	<bean id="mobileLogInterceptor" class="web.interceptor.MobileLogInterceptor">
		<property name="mappingURL" value="checkLogin.do" />
		<property name="systemInfo" ref="systemInfo"></property>
		<property name="mobileLogService" ref="mobileLogService"></property>
	</bean>
	
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" >  
        <property name="interceptors">  
           <!-- 多个拦截器,顺序执行 -->  
           <list>  
              <ref bean="urlInterceptor" />
              <ref bean="securityInterceptor" />
              <ref bean="logInterceptor" />
              <ref bean="mobileURLInterceptor" />
              <ref bean="mobileLogInterceptor" />
           </list>  
        </property>
    </bean> 

	<!-- 资源文件 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="/WEB-INF/messages/messages" />
		<property name="cacheSeconds" value="0" />
	</bean>
	
	<!-- 对模型视图名称的解析，在请求时模型视图名称添加前后缀 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="0"/>
	</bean>

	<!-- 异常处理
	<bean id="webExceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView" value="redirect:/error.jsp" />
		<property name="exceptionMappings">
			<props>
				<prop key="web.exception.ApplyException">
					redirect:/error.jsp
				</prop>
				<prop key="java.lang.Exception">
					redirect:/error.jsp
				</prop>
			</props>
		</property>
	</bean> -->
	
	<!-- 配置文件上传的支持 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
    	<!-- 最大上传100M （-1为无限制） -->
        <property name="maxUploadSize" value="102400000" />
        <!--resolveLazily属性启用是为了推迟文件解析，以便在UploadAction 中捕获文件大小异常-->
        <property name="resolveLazily" value="true" />  
        <!-- 最大内存大小(4096) -->
        <property name="maxInMemorySize" value="4096" />  
        <!-- 默认编码(ISO-8859-1) -->
        <property name="defaultEncoding" value="UTF-8"/> 
    </bean> 

</beans>